// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AcceptanceTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Data Transfer Service - Charges")]
    public partial class DataTransferService_ChargesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Data Transfer Service - Charges.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Data Transfer Service - Charges", "In order to make a profit on data transfer calls (local and foreign)\r\nAs an accou" +
                    "ntant\r\nI must be able to register data transfer calls \r\nand I must be able to ch" +
                    "oose between different kinds of charges for data transfer calls", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pr. Kilobyte Charge")]
        [NUnit.Framework.TestCaseAttribute("10.0", "40", "www.google.com", "10", "100", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("20.0", "40", "www.google.com", "10", "200", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("30.0", "40", "www.google.com", "10", "300", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("10.0", "40", "www.google.com", "10", "500", "DK", "DE", new string[0])]
        [NUnit.Framework.TestCaseAttribute("20.0", "40", "www.google.com", "10", "600", "DE", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("30.0", "40", "www.google.com", "10", "400", "DE", "DE", new string[0])]
        public virtual void Pr_KilobyteCharge(string kilobyteCharge, string foreignKilobyteCharge, string url, string transferSizeInKilobytes, string cost, string sourceCountry, string destinationCountry, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pr. Kilobyte Charge", exampleTags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I have a subscription which has \"DK\" as local country");
#line 10
 testRunner.And("I have added a Data Transfer service to the subscription");
#line 11
 testRunner.And(string.Format("I have specified a charge of: \"{0}\" for every kilobyte for the Data Transfer serv" +
                        "ice", kilobyteCharge));
#line 12
 testRunner.And(string.Format("I have added Data Transfer charge of \"{0}\"  for every kilobyte for calling to or " +
                        "from country: \"DE\"", foreignKilobyteCharge));
#line 13
 testRunner.And(string.Format("I start a Data Transfer from \"{0}\"", url));
#line 14
 testRunner.And(string.Format("the Data Transfer starts in \"{0}\"", sourceCountry));
#line 15
 testRunner.And(string.Format("the Data Transfer ends in \"{0}\"", destinationCountry));
#line 16
 testRunner.And(string.Format("the Data Transfer sizes up to: \"{0}\" kilobytes", transferSizeInKilobytes));
#line 17
 testRunner.When("the Data Transfer has been completed");
#line 18
 testRunner.And("the accounting machine has processed the data transfer call");
#line 19
 testRunner.Then(string.Format("the price for performing the Data Transfer must be: \"{0}\"", cost));
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pr. Megabyte Charge")]
        [NUnit.Framework.TestCaseAttribute("10.0", "40", "www.google.com", "10", "100", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("20.0", "40", "www.google.com", "10", "200", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("30.0", "40", "www.google.com", "10", "300", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("10.0", "40", "www.google.com", "10", "500", "DK", "DE", new string[0])]
        [NUnit.Framework.TestCaseAttribute("20.0", "40", "www.google.com", "10", "600", "DE", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("30.0", "40", "www.google.com", "10", "400", "DE", "DE", new string[0])]
        public virtual void Pr_MegabyteCharge(string megabyteCharge, string foreignMegabyteCharge, string url, string transferSizeInMegabytes, string cost, string sourceCountry, string destinationCountry, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pr. Megabyte Charge", exampleTags);
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.Given("I have a subscription which has \"DK\" as local country");
#line 33
 testRunner.And("I have added a Data Transfer service to the subscription");
#line 34
 testRunner.And(string.Format("I have specified a charge of: \"{0}\" for every megabyte for the Data Transfer serv" +
                        "ice", megabyteCharge));
#line 35
 testRunner.And(string.Format("I have added Data Transfer charge of \"{0}\"  for every megabyte for calling to or " +
                        "from country: \"DE\"", foreignMegabyteCharge));
#line 36
 testRunner.And(string.Format("I start a Data Transfer from \"{0}\"", url));
#line 37
 testRunner.And(string.Format("the Data Transfer starts in \"{0}\"", sourceCountry));
#line 38
 testRunner.And(string.Format("the Data Transfer ends in \"{0}\"", destinationCountry));
#line 39
 testRunner.And(string.Format("the Data Transfer sizes up to: \"{0}\" megabytes", transferSizeInMegabytes));
#line 40
 testRunner.When("the Data Transfer has been completed");
#line 41
 testRunner.And("the accounting machine has processed the data transfer call");
#line 42
 testRunner.Then(string.Format("the price for performing the Data Transfer must be: \"{0}\"", cost));
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
