// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AcceptanceTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Call Central")]
    public partial class CallCentralFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CallCental.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Call Central", "In order to calculate the bill for a customers usage of one or more phone subscri" +
                    "ptions\r\nAs an accountant\r\nI want all calls to be registred at the Call Central s" +
                    "o that I am able to inspect all registered serivce usage of a subscription", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Register a Call")]
        public virtual void RegisterACall()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Register a Call", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("a customer has a phone subscription with the Voice Call Service");
#line 8
 testRunner.And("wants to make a call within the local country");
#line 9
 testRunner.When("the customer makes a Voice Call with the phone");
#line 10
 testRunner.Then("the call has been registred at the Call Central");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deny usage of services not provided by the subscription")]
        public virtual void DenyUsageOfServicesNotProvidedByTheSubscription()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deny usage of services not provided by the subscription", ((string[])(null)));
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("a customer has a phone subscriptions without any services");
#line 14
 testRunner.When("the customer tries to make a Voice Call with the phone");
#line 15
 testRunner.Then("the service is denied with a ServiceNotSupportedBySubscriptionException when cont" +
                    "acting the Call Central");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deny usage of services if the call is outside the allow country range")]
        public virtual void DenyUsageOfServicesIfTheCallIsOutsideTheAllowCountryRange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deny usage of services if the call is outside the allow country range", ((string[])(null)));
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("a customer has a phone subscription with the Voice Call Service");
#line 19
 testRunner.When("the customer tries to make a Voice Call with the phone to \"DE\" from \"DK\"");
#line 20
 testRunner.Then("the service is denied with a CountriesNotSupportBySubscriptionException when cont" +
                    "acting the Call Central");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deny usage of services if invalid source phonenumber was supplied")]
        public virtual void DenyUsageOfServicesIfInvalidSourcePhonenumberWasSupplied()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deny usage of services if invalid source phonenumber was supplied", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("a customer has a phone subscription with the Voice Call Service");
#line 24
 testRunner.And("wants to make a call within the local country");
#line 25
 testRunner.When("for some reason the call is missing a source phonenumber");
#line 26
 testRunner.And("the customer tries to make a Voice Call with the phone");
#line 27
 testRunner.Then("the service is denied with an InvalidCallException when contacting the Call Centr" +
                    "al");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deny usage of services if invalid destination phonenumber was supplied")]
        public virtual void DenyUsageOfServicesIfInvalidDestinationPhonenumberWasSupplied()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deny usage of services if invalid destination phonenumber was supplied", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given("a customer has a phone subscription with the Voice Call Service");
#line 31
 testRunner.And("wants to make a call within the local country");
#line 32
 testRunner.When("for some reason the call is missing a destination phonenumber");
#line 33
 testRunner.And("the customer tries to make a Voice Call with the phone");
#line 34
 testRunner.Then("the service is denied with an InvalidCallException when contacting the Call Centr" +
                    "al");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deny usage of services if invalid source country was supplied")]
        public virtual void DenyUsageOfServicesIfInvalidSourceCountryWasSupplied()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deny usage of services if invalid source country was supplied", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("a customer has a phone subscription with the Voice Call Service");
#line 38
 testRunner.And("wants to make a call within the local country");
#line 39
 testRunner.When("for some reason the call is missing a source country");
#line 40
 testRunner.And("the customer tries to make a Voice Call with the phone");
#line 41
 testRunner.Then("the service is denied with an InvalidCallException when contacting the Call Centr" +
                    "al");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deny usage of services if invalid destination country was supplied")]
        public virtual void DenyUsageOfServicesIfInvalidDestinationCountryWasSupplied()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deny usage of services if invalid destination country was supplied", ((string[])(null)));
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("a customer has a phone subscription with the Voice Call Service");
#line 45
 testRunner.And("wants to make a call within the local country");
#line 46
 testRunner.When("for some reason the call is missing a destination country");
#line 47
 testRunner.And("the customer tries to make a Voice Call with the phone");
#line 48
 testRunner.Then("the service is denied with an InvalidCallException when contacting the Call Centr" +
                    "al");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
