// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AcceptanceTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SMS Service - Charges")]
    public partial class SMSService_ChargesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SMS Service - Charges.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SMS Service - Charges", "In order to make a profit on sms calls (local and foreign)\r\nAs an accountant\r\nI m" +
                    "ust be able to register sms calls \r\nand I must be able to choose between differe" +
                    "nt kinds of charges for sms calls", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Send Charge")]
        [NUnit.Framework.TestCaseAttribute("1.0", "0", "128", "1", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2.0", "0", "256", "2", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("1.0", "0", "512", "1", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("1.0", "4", "64", "5", "DE", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2.0", "3", "32", "5", "DK", "DE", new string[0])]
        [NUnit.Framework.TestCaseAttribute("1.0", "2.3", "16", "2.3", "DE", "DE", new string[0])]
        public virtual void SendCharge(string sendCharge, string foreignSendCharge, string sMSLenght, string cost, string sourceCountry, string destinationCountry, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send Charge", exampleTags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I have a subscription which has \"DK\" as local country");
#line 9
 testRunner.And("I have added a SMS service to the subscription");
#line 10
 testRunner.And(string.Format("I have specified a SMS send charge of \"{0}\"", sendCharge));
#line 11
 testRunner.And(string.Format("I have added SMS send charge of \"{0}\" for calling to or from country: \"DE\"", foreignSendCharge));
#line 12
 testRunner.And(string.Format("I create a SMS of \"{0}\" characters", sMSLenght));
#line 13
 testRunner.And(string.Format("the SMS is sent from \"{0}\"", sourceCountry));
#line 14
 testRunner.And(string.Format("the SMS is sent to \"{0}\"", destinationCountry));
#line 15
 testRunner.When("the SMS has been sent");
#line 16
 testRunner.And("the accounting machine has processed the sms call");
#line 17
 testRunner.Then(string.Format("the price for sending the sms must be: \"{0}\"", cost));
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Lenght Charge")]
        [NUnit.Framework.TestCaseAttribute("1.0", "16", "1.0", "512", "64", "4", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2.0", "32", "2.0", "256", "128", "8", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("1.0", "64", "3.0", "128", "256", "4", "DK", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("1.0", "128", "4.0", "64", "64", "5", "DK", "DE", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2.0", "256", "5.0", "32", "256", "42", "DE", "DK", new string[0])]
        [NUnit.Framework.TestCaseAttribute("1.0", "512", "6.0", "16", "321", "126", "DE", "DE", new string[0])]
        public virtual void LenghtCharge(string lenghtCharge, string numberOfCharacters, string foreignLenghtCharge, string foreignNumberOfCharacters, string sMSLenght, string cost, string sourceCountry, string destinationCountry, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Lenght Charge", exampleTags);
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I have a subscription which has \"DK\" as local country");
#line 30
 testRunner.And("I have added a SMS service to the subscription");
#line 31
 testRunner.And(string.Format("I have specified a lenght charge of: \"{0}\" for every \"{1}\" character for the SMS " +
                        "Call service", lenghtCharge, numberOfCharacters));
#line 32
 testRunner.And(string.Format("I have added SMS lenght charge of \"{0}\"  for every \"{1}\" for calling to or from c" +
                        "ountry: \"DE\"", foreignLenghtCharge, foreignNumberOfCharacters));
#line 33
 testRunner.And(string.Format("I create a SMS of \"{0}\" characters", sMSLenght));
#line 34
 testRunner.And(string.Format("the SMS is sent from \"{0}\"", sourceCountry));
#line 35
 testRunner.And(string.Format("the SMS is sent to \"{0}\"", destinationCountry));
#line 36
 testRunner.When("the SMS has been sent");
#line 37
 testRunner.And("the accounting machine has processed the sms call");
#line 38
 testRunner.Then(string.Format("the price for sending the sms must be: \"{0}\"", cost));
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
